{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import onlyNumbers from '@brazilian-utils/helper-only-numbers';\n\nconst numberToWeightArray = (weight, length) => {\n  const array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(weight - i);\n  }\n\n  return array;\n};\n\nconst createChecksum = (cpfStart, weights) =>\n  cpfStart.split('').reduce((agg, value, index) => agg + parseInt(value, 10) * weights[index], 0);\n\nexport default function generateChecksum(base, weights) {\n  const numericBase = onlyNumbers(base);\n\n  if (weights.constructor === Number) {\n    const weightsArray = numberToWeightArray(weights, numericBase.length);\n    return createChecksum(numericBase, weightsArray);\n  }\n\n  if (weights.constructor === Array) {\n    return createChecksum(numericBase, weights);\n  }\n\n  throw new Error('Invalid weight type. Should be an Array like or a Number');\n}\n"],"names":["numberToWeightArray","weight","length","const","array","i","push","createChecksum","cpfStart","weights","split","reduce","agg","value","index","parseInt","base","numericBase","onlyNumbers","constructor","Number","weightsArray","Array","Error"],"mappings":"2GAEMA,WAAuBC,EAAQC,GAEnC,IADAC,IAAMC,KACGC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BD,EAAME,KAAKL,EAASI,GAGtB,OAAOD,GAGHG,WAAkBC,EAAUC,UAChCD,EAASE,MAAM,IAAIC,gBAAQC,EAAKC,EAAOC,UAAUF,EAAMG,SAASF,EAAO,IAAMJ,EAAQK,IAAQ,mBAEhF,SAA0BE,EAAMP,GAC7CN,IAAMc,EAAcC,EAAYF,GAEhC,GAAIP,EAAQU,cAAgBC,OAAQ,CAClCjB,IAAMkB,EAAerB,EAAoBS,EAASQ,EAAYf,QAC9D,OAAOK,EAAeU,EAAaI,GAGrC,GAAIZ,EAAQU,cAAgBG,MAC1B,OAAOf,EAAeU,EAAaR,GAGrC,MAAM,IAAIc,MAAM"}