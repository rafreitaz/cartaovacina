{"version":3,"file":"ng-block-ui-http.js.map","sources":["ng://ng-block-ui/http/block-ui-http-settings.service.ts","ng://ng-block-ui/http/block-ui-http.interceptor.ts","ng://ng-block-ui/http/block-ui-http.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpSettings } from 'ng-block-ui';\n\n@Injectable()\nexport class BlockUIHttpSettings {\n  settings: HttpSettings = {};\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { BlockUIService, BLOCKUI_DEFAULT } from 'ng-block-ui';\nimport { BlockUIHttpSettings } from './block-ui-http-settings.service';\n\n@Injectable()\nexport class BlockUIInterceptor implements HttpInterceptor {\n  private settings: any = {};\n\n  constructor(\n    private blockUIService: BlockUIService,\n    private BlockUIHttpSettings: BlockUIHttpSettings\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let active = false;\n\n    if (this.shouldBlock(request)) {\n      this.blockUIService.start(BLOCKUI_DEFAULT);\n      active = true;\n    }\n\n    return next.handle(request)\n      .pipe(\n        finalize(() => {\n          active && this.blockUIService.stop(BLOCKUI_DEFAULT);\n        })\n      );\n  }\n\n  shouldBlock(request: HttpRequest<any>): boolean {\n    const { method, urlWithParams } = request;\n    const settings = this.BlockUIHttpSettings.settings;\n    const requestFilters = settings.requestFilters || [];\n\n    return !requestFilters.some((f: any) => {\n      if (f && f.method && f.url) {\n        return f.method.toUpperCase() === method && f.url.test(urlWithParams);\n      } else if (typeof f === 'function') {\n        return f(request);\n      }\n\n      return f.test(urlWithParams);\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BlockUIModule, HttpSettings } from 'ng-block-ui';\nimport { BlockUIHttpSettings } from './block-ui-http-settings.service';\nimport { BlockUIInterceptor } from './block-ui-http.interceptor';\n\n\n// Needed for AOT compiling\nexport const BlockUIHttpModuleSettings = new InjectionToken<string>('BlockUIHttpModuleSettings');\n\nexport function provideSettingsInstance(settings: HttpSettings): BlockUIHttpSettings {\n  return { settings };\n}\n\n@NgModule({\n  imports: [BlockUIModule]\n})\nexport class BlockUIHttpModule {\n  public static forRoot(settings: HttpSettings = {}): ModuleWithProviders {\n    return {\n      ngModule: BlockUIHttpModule,\n      providers: [\n        {\n          provide: BlockUIHttpModuleSettings,\n          useValue: settings\n        },\n        {\n          provide: BlockUIHttpSettings,\n          useFactory: provideSettingsInstance,\n          deps: [BlockUIHttpModuleSettings]\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: BlockUIInterceptor,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n"],"names":["BlockUIHttpSettings"],"mappings":";;;;;;;;;AAAA;;wBAK2B,EAAE;;;;YAF5B,UAAU;;;;;;;ACHX;;;;;IAgBE,YACU,gBACAA;QADA,mBAAc,GAAd,cAAc;QACd,wBAAmB,GAAnBA,sBAAmB;wBAJL,EAAE;KAKtB;;;;;;IAEJ,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,qBAAI,MAAM,GAAG,KAAK,CAAC;QAEnB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC3C,MAAM,GAAG,IAAI,CAAC;SACf;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aACxB,IAAI,CACH,QAAQ,CAAC;YACP,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACrD,CAAC,CACH,CAAC;KACL;;;;;IAED,WAAW,CAAC,OAAyB;QACnC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC;QAC1C,uBAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;QACnD,uBAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,IAAI,EAAE,CAAC;QAErD,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAM;YACjC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE;gBAC1B,OAAO,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACvE;iBAAM,IAAI,OAAO,CAAC,KAAK,UAAU,EAAE;gBAClC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;aACnB;YAED,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC9B,CAAC,CAAC;KACJ;;;YAvCF,UAAU;;;;YAHF,cAAc;YACd,mBAAmB;;;;;;;ACV5B;AAQA,uBAAa,yBAAyB,GAAG,IAAI,cAAc,CAAS,2BAA2B,CAAC,CAAC;;;;;AAEjG,iCAAwC,QAAsB;IAC5D,OAAO,EAAE,QAAQ,EAAE,CAAC;CACrB;AAKD;;;;;IACS,OAAO,OAAO,CAAC,WAAyB,EAAE;QAC/C,OAAO;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,yBAAyB;oBAClC,QAAQ,EAAE,QAAQ;iBACnB;gBACD;oBACE,OAAO,EAAE,mBAAmB;oBAC5B,UAAU,EAAE,uBAAuB;oBACnC,IAAI,EAAE,CAAC,yBAAyB,CAAC;iBAClC;gBACD;oBACE,OAAO,EAAE,iBAAiB;oBAC1B,QAAQ,EAAE,kBAAkB;oBAC5B,KAAK,EAAE,IAAI;iBACZ;aACF;SACF,CAAC;;;;YAvBL,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,aAAa,CAAC;aACzB;;;;;;;;;;;;;;;"}
